// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: proto/ud.proto

package ud

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WithID) Reset() {
	*x = WithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithID) ProtoMessage() {}

func (x *WithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithID.ProtoReflect.Descriptor instead.
func (*WithID) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{0}
}

func (x *WithID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{1}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64               `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int64               `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Orders []*PageInfo_OrderBy `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{2}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageInfo) GetOrders() []*PageInfo_OrderBy {
	if x != nil {
		return x.Orders
	}
	return nil
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{3}
}

func (x *TimeRange) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TimeRange) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type DeviceCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
}

func (x *DeviceCore) Reset() {
	*x = DeviceCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCore) ProtoMessage() {}

func (x *DeviceCore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCore.ProtoReflect.Descriptor instead.
func (*DeviceCore) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceCore) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceCore) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type AlarmRecordIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID     int64      `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"` //告警配置ID
	AlarmCode   string     `protobuf:"bytes,10,opt,name=alarmCode,proto3" json:"alarmCode,omitempty"`
	AreaID      int64      `protobuf:"varint,8,opt,name=areaID,proto3" json:"areaID,omitempty"`
	AreaIDPath  string     `protobuf:"bytes,9,opt,name=areaIDPath,proto3" json:"areaIDPath,omitempty"`
	AlarmName   string     `protobuf:"bytes,5,opt,name=alarmName,proto3" json:"alarmName,omitempty"`           //告警名称
	Page        *PageInfo  `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`                     // 分页信息 获取全部不填
	TimeRange   *TimeRange `protobuf:"bytes,3,opt,name=timeRange,proto3" json:"timeRange,omitempty"`           // 时间范围
	DealStatus  []int64    `protobuf:"varint,4,rep,packed,name=dealStatus,proto3" json:"dealStatus,omitempty"` //告警记录状态（1无告警 2告警中 3已处理 4 无效）
	DeviceName  string     `protobuf:"bytes,6,opt,name=deviceName,proto3" json:"deviceName,omitempty"`         //告警设备ID
	DeviceAlias string     `protobuf:"bytes,7,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"`       //告警设备名称
}

func (x *AlarmRecordIndexReq) Reset() {
	*x = AlarmRecordIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecordIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecordIndexReq) ProtoMessage() {}

func (x *AlarmRecordIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecordIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmRecordIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{5}
}

func (x *AlarmRecordIndexReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmRecordIndexReq) GetAlarmCode() string {
	if x != nil {
		return x.AlarmCode
	}
	return ""
}

func (x *AlarmRecordIndexReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AlarmRecordIndexReq) GetAreaIDPath() string {
	if x != nil {
		return x.AreaIDPath
	}
	return ""
}

func (x *AlarmRecordIndexReq) GetAlarmName() string {
	if x != nil {
		return x.AlarmName
	}
	return ""
}

func (x *AlarmRecordIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AlarmRecordIndexReq) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *AlarmRecordIndexReq) GetDealStatus() []int64 {
	if x != nil {
		return x.DealStatus
	}
	return nil
}

func (x *AlarmRecordIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AlarmRecordIndexReq) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

type AlarmRecordIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlarmRecord `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *AlarmRecordIndexResp) Reset() {
	*x = AlarmRecordIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecordIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecordIndexResp) ProtoMessage() {}

func (x *AlarmRecordIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecordIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmRecordIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{6}
}

func (x *AlarmRecordIndexResp) GetList() []*AlarmRecord {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlarmRecordIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlarmRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //编号
	AlarmID        int64  `protobuf:"varint,2,opt,name=alarmID,proto3" json:"alarmID,omitempty"`        //告警记录ID
	AreaID         int64  `protobuf:"varint,18,opt,name=areaID,proto3" json:"areaID,omitempty"`         //告警的区域ID
	AlarmName      string `protobuf:"bytes,12,opt,name=alarmName,proto3" json:"alarmName,omitempty"`    //告警名称
	TriggerType    string `protobuf:"bytes,3,opt,name=triggerType,proto3" json:"triggerType,omitempty"` //触发类型 device:设备触发 timer:定时触发 weather:天气触发
	TriggerSubType string `protobuf:"bytes,16,opt,name=triggerSubType,proto3" json:"triggerSubType,omitempty"`
	TriggerDetail  string `protobuf:"bytes,17,opt,name=triggerDetail,proto3" json:"triggerDetail,omitempty"` //设备触发的会有触发详情json
	ProductID      string `protobuf:"bytes,4,opt,name=productID,proto3" json:"productID,omitempty"`          //触发产品id
	DeviceName     string `protobuf:"bytes,5,opt,name=deviceName,proto3" json:"deviceName,omitempty"`        //触发设备ID
	DeviceAlias    string `protobuf:"bytes,15,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"`     //设备名称
	SceneName      string `protobuf:"bytes,6,opt,name=sceneName,proto3" json:"sceneName,omitempty"`          //场景名称
	SceneID        int64  `protobuf:"varint,7,opt,name=sceneID,proto3" json:"sceneID,omitempty"`             //场景ID
	Level          int64  `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`                 //告警配置级别（1提醒 2一般 3严重 4紧急 5超紧急）
	LastAlarm      int64  `protobuf:"varint,9,opt,name=lastAlarm,proto3" json:"lastAlarm,omitempty"`         //最新告警时间
	CreatedTime    int64  `protobuf:"varint,10,opt,name=createdTime,proto3" json:"createdTime,omitempty"`    //创建时间
	DealStatus     int64  `protobuf:"varint,11,opt,name=dealStatus,proto3" json:"dealStatus,omitempty"`      //告警记录状态（1无告警 2告警中 3已处理 4 无效）
	AlarmCount     int64  `protobuf:"varint,13,opt,name=alarmCount,proto3" json:"alarmCount,omitempty"`      //告警次数
	Desc           string `protobuf:"bytes,14,opt,name=desc,proto3" json:"desc,omitempty"`                   //描述
}

func (x *AlarmRecord) Reset() {
	*x = AlarmRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecord) ProtoMessage() {}

func (x *AlarmRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecord.ProtoReflect.Descriptor instead.
func (*AlarmRecord) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{7}
}

func (x *AlarmRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmRecord) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmRecord) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AlarmRecord) GetAlarmName() string {
	if x != nil {
		return x.AlarmName
	}
	return ""
}

func (x *AlarmRecord) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

func (x *AlarmRecord) GetTriggerSubType() string {
	if x != nil {
		return x.TriggerSubType
	}
	return ""
}

func (x *AlarmRecord) GetTriggerDetail() string {
	if x != nil {
		return x.TriggerDetail
	}
	return ""
}

func (x *AlarmRecord) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *AlarmRecord) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AlarmRecord) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *AlarmRecord) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *AlarmRecord) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *AlarmRecord) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AlarmRecord) GetLastAlarm() int64 {
	if x != nil {
		return x.LastAlarm
	}
	return 0
}

func (x *AlarmRecord) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *AlarmRecord) GetDealStatus() int64 {
	if x != nil {
		return x.DealStatus
	}
	return 0
}

func (x *AlarmRecord) GetAlarmCount() int64 {
	if x != nil {
		return x.AlarmCount
	}
	return 0
}

func (x *AlarmRecord) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type AlarmRecordCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID        int64  `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"`        //告警记录ID(如果不填写sceneID则需要填写告警ID,指定告警)
	TriggerType    string `protobuf:"bytes,3,opt,name=triggerType,proto3" json:"triggerType,omitempty"` //触发类型(设备触发1,其他2)
	TriggerSubType string `protobuf:"bytes,10,opt,name=triggerSubType,proto3" json:"triggerSubType,omitempty"`
	TriggerDetail  string `protobuf:"bytes,11,opt,name=triggerDetail,proto3" json:"triggerDetail,omitempty"` //设备触发的会有触发详情json
	ProductID      string `protobuf:"bytes,4,opt,name=productID,proto3" json:"productID,omitempty"`          //触发产品id
	DeviceName     string `protobuf:"bytes,5,opt,name=deviceName,proto3" json:"deviceName,omitempty"`        //触发设备名称
	DeviceAlias    string `protobuf:"bytes,6,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"`      //触发设备昵称
	SceneName      string `protobuf:"bytes,7,opt,name=sceneName,proto3" json:"sceneName,omitempty"`          //场景名称
	SceneID        int64  `protobuf:"varint,8,opt,name=sceneID,proto3" json:"sceneID,omitempty"`             //场景ID
	Mode           string `protobuf:"bytes,9,opt,name=mode,proto3" json:"mode,omitempty"`                    //告警模式  trigger: 触发告警  relieve: 解除告警
}

func (x *AlarmRecordCreateReq) Reset() {
	*x = AlarmRecordCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecordCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecordCreateReq) ProtoMessage() {}

func (x *AlarmRecordCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecordCreateReq.ProtoReflect.Descriptor instead.
func (*AlarmRecordCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{8}
}

func (x *AlarmRecordCreateReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmRecordCreateReq) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

func (x *AlarmRecordCreateReq) GetTriggerSubType() string {
	if x != nil {
		return x.TriggerSubType
	}
	return ""
}

func (x *AlarmRecordCreateReq) GetTriggerDetail() string {
	if x != nil {
		return x.TriggerDetail
	}
	return ""
}

func (x *AlarmRecordCreateReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *AlarmRecordCreateReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AlarmRecordCreateReq) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *AlarmRecordCreateReq) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *AlarmRecordCreateReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *AlarmRecordCreateReq) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type AlarmRecordDealReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Handle int64 `protobuf:"varint,2,opt,name=handle,proto3" json:"handle,omitempty"` //1 无效(告警无效) 2 派单(走工作流)
}

func (x *AlarmRecordDealReq) Reset() {
	*x = AlarmRecordDealReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRecordDealReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRecordDealReq) ProtoMessage() {}

func (x *AlarmRecordDealReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRecordDealReq.ProtoReflect.Descriptor instead.
func (*AlarmRecordDealReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{9}
}

func (x *AlarmRecordDealReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmRecordDealReq) GetHandle() int64 {
	if x != nil {
		return x.Handle
	}
	return 0
}

type AlarmSceneIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID int64 `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"` //告警配置ID
}

func (x *AlarmSceneIndexReq) Reset() {
	*x = AlarmSceneIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneIndexReq) ProtoMessage() {}

func (x *AlarmSceneIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmSceneIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{10}
}

func (x *AlarmSceneIndexReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

type AlarmSceneDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID int64 `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"` //告警配置ID
	SceneID int64 `protobuf:"varint,2,opt,name=sceneID,proto3" json:"sceneID,omitempty"` //场景id
}

func (x *AlarmSceneDeleteReq) Reset() {
	*x = AlarmSceneDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneDeleteReq) ProtoMessage() {}

func (x *AlarmSceneDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneDeleteReq.ProtoReflect.Descriptor instead.
func (*AlarmSceneDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{11}
}

func (x *AlarmSceneDeleteReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmSceneDeleteReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

type AlarmSceneMultiSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID  int64   `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"`          //告警配置ID
	SceneIDs []int64 `protobuf:"varint,2,rep,packed,name=sceneIDs,proto3" json:"sceneIDs,omitempty"` //场景id
}

func (x *AlarmSceneMultiSaveReq) Reset() {
	*x = AlarmSceneMultiSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneMultiSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneMultiSaveReq) ProtoMessage() {}

func (x *AlarmSceneMultiSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneMultiSaveReq.ProtoReflect.Descriptor instead.
func (*AlarmSceneMultiSaveReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{12}
}

func (x *AlarmSceneMultiSaveReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmSceneMultiSaveReq) GetSceneIDs() []int64 {
	if x != nil {
		return x.SceneIDs
	}
	return nil
}

type AlarmSceneIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmID int64        `protobuf:"varint,1,opt,name=alarmID,proto3" json:"alarmID,omitempty"` //告警配置ID
	Scenes  []*SceneInfo `protobuf:"bytes,2,rep,name=scenes,proto3" json:"scenes,omitempty"`    //场景列表,只返回基础信息
}

func (x *AlarmSceneIndexResp) Reset() {
	*x = AlarmSceneIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmSceneIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmSceneIndexResp) ProtoMessage() {}

func (x *AlarmSceneIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmSceneIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmSceneIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{13}
}

func (x *AlarmSceneIndexResp) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *AlarmSceneIndexResp) GetScenes() []*SceneInfo {
	if x != nil {
		return x.Scenes
	}
	return nil
}

type AlarmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //编号
	Code        string         `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
	Name        string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                  //告警配置名称
	Desc        string         `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                  //告警配置说明
	Level       int64          `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`               //告警配置级别（1提醒 2一般 3严重 4紧急 5超紧急）
	Status      int64          `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`             //告警配置状态（1启用 2禁用 3不可用） 不可用一般为绑定的区域被删除
	Reason      string         `protobuf:"bytes,11,opt,name=reason,proto3" json:"reason,omitempty"`             //不可用原因
	CreatedTime int64          `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty"`   //创建时间
	SceneIDs    []int64        `protobuf:"varint,10,rep,packed,name=sceneIDs,proto3" json:"sceneIDs,omitempty"` //绑定的场景
	Notifies    []*AlarmNotify `protobuf:"bytes,7,rep,name=notifies,proto3" json:"notifies,omitempty"`
	UserIDs     []int64        `protobuf:"varint,8,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"` //指定用户ID
	Accounts    []string       `protobuf:"bytes,9,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *AlarmInfo) Reset() {
	*x = AlarmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmInfo) ProtoMessage() {}

func (x *AlarmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmInfo.ProtoReflect.Descriptor instead.
func (*AlarmInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{14}
}

func (x *AlarmInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AlarmInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlarmInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AlarmInfo) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AlarmInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlarmInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AlarmInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *AlarmInfo) GetSceneIDs() []int64 {
	if x != nil {
		return x.SceneIDs
	}
	return nil
}

func (x *AlarmInfo) GetNotifies() []*AlarmNotify {
	if x != nil {
		return x.Notifies
	}
	return nil
}

func (x *AlarmInfo) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *AlarmInfo) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AlarmNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`              //通知类型
	TemplateID int64  `protobuf:"varint,2,opt,name=templateID,proto3" json:"templateID,omitempty"` //模版code
}

func (x *AlarmNotify) Reset() {
	*x = AlarmNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmNotify) ProtoMessage() {}

func (x *AlarmNotify) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmNotify.ProtoReflect.Descriptor instead.
func (*AlarmNotify) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{15}
}

func (x *AlarmNotify) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AlarmNotify) GetTemplateID() int64 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

type AlarmInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` // 分页信息 只获取一个则不填
	Name string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` //告警配置名称 模糊查询
	Code string    `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AlarmInfoIndexReq) Reset() {
	*x = AlarmInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmInfoIndexReq) ProtoMessage() {}

func (x *AlarmInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmInfoIndexReq.ProtoReflect.Descriptor instead.
func (*AlarmInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{16}
}

func (x *AlarmInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AlarmInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlarmInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AlarmInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlarmInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //告警信息
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *AlarmInfoIndexResp) Reset() {
	*x = AlarmInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmInfoIndexResp) ProtoMessage() {}

func (x *AlarmInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmInfoIndexResp.ProtoReflect.Descriptor instead.
func (*AlarmInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{17}
}

func (x *AlarmInfoIndexResp) GetList() []*AlarmInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlarmInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SceneInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page             *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                           //分页信息 只获取一个则不填
	AreaID           int64     `protobuf:"varint,6,opt,name=areaID,proto3" json:"areaID,omitempty"`                      //所属区域
	Tag              string    `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`                             //标签 admin: 管理员 normal: 普通
	Name             string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                           //场景名 模糊查询
	Status           int64     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                      //状态: 1启用 2禁用
	Type             string    `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                           //auto:自动化 manual:手动触发
	AlarmID          int64     `protobuf:"varint,5,opt,name=alarmID,proto3" json:"alarmID,omitempty"`                    //告警配置ID过滤
	DeviceMode       string    `protobuf:"bytes,10,opt,name=deviceMode,proto3" json:"deviceMode,omitempty"`              //设备模式 single:单设备 multi:多设备
	ProductID        string    `protobuf:"bytes,8,opt,name=productID,proto3" json:"productID,omitempty"`                 //产品id
	DeviceName       string    `protobuf:"bytes,9,opt,name=deviceName,proto3" json:"deviceName,omitempty"`               //设备名称
	DeviceFilterMode int64     `protobuf:"varint,13,opt,name=deviceFilterMode,proto3" json:"deviceFilterMode,omitempty"` //设备过滤模式: 1,过滤触发或执行(默认) 2,过滤触发 3,过滤执行
	HasActionType    string    `protobuf:"bytes,11,opt,name=hasActionType,proto3" json:"hasActionType,omitempty"`        //过滤有某个执行类型
	SceneIDs         []int64   `protobuf:"varint,12,rep,packed,name=sceneIDs,proto3" json:"sceneIDs,omitempty"`
	IsCommon         int64     `protobuf:"varint,24,opt,name=isCommon,proto3" json:"isCommon,omitempty"` //是否是常用的
}

func (x *SceneInfoIndexReq) Reset() {
	*x = SceneInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfoIndexReq) ProtoMessage() {}

func (x *SceneInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfoIndexReq.ProtoReflect.Descriptor instead.
func (*SceneInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{18}
}

func (x *SceneInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SceneInfoIndexReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *SceneInfoIndexReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SceneInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneInfoIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneInfoIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneInfoIndexReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *SceneInfoIndexReq) GetDeviceMode() string {
	if x != nil {
		return x.DeviceMode
	}
	return ""
}

func (x *SceneInfoIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SceneInfoIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SceneInfoIndexReq) GetDeviceFilterMode() int64 {
	if x != nil {
		return x.DeviceFilterMode
	}
	return 0
}

func (x *SceneInfoIndexReq) GetHasActionType() string {
	if x != nil {
		return x.HasActionType
	}
	return ""
}

func (x *SceneInfoIndexReq) GetSceneIDs() []int64 {
	if x != nil {
		return x.SceneIDs
	}
	return nil
}

func (x *SceneInfoIndexReq) GetIsCommon() int64 {
	if x != nil {
		return x.IsCommon
	}
	return 0
}

type SceneInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SceneInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *SceneInfoIndexResp) Reset() {
	*x = SceneInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfoIndexResp) ProtoMessage() {}

func (x *SceneInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfoIndexResp.ProtoReflect.Descriptor instead.
func (*SceneInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{19}
}

func (x *SceneInfoIndexResp) GetList() []*SceneInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SceneInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SceneFlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`       //if then
	SubType string `protobuf:"bytes,2,opt,name=subType,proto3" json:"subType,omitempty"` //timer:定时触发 notify: 通知 delay:延迟  device:设备输出或设备触发
	Info    string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`       //内容
}

func (x *SceneFlowInfo) Reset() {
	*x = SceneFlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneFlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneFlowInfo) ProtoMessage() {}

func (x *SceneFlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneFlowInfo.ProtoReflect.Descriptor instead.
func (*SceneFlowInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{20}
}

func (x *SceneFlowInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneFlowInfo) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *SceneFlowInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type SceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   //场景id
	Name            string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                //场景名
	Desc            string           `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                //描述
	AreaID          int64            `protobuf:"varint,21,opt,name=areaID,proto3" json:"areaID,omitempty"`          //区域id
	FlowPath        []*SceneFlowInfo `protobuf:"bytes,15,rep,name=FlowPath,proto3" json:"FlowPath,omitempty"`       //执行的流程
	Tag             string           `protobuf:"bytes,12,opt,name=tag,proto3" json:"tag,omitempty"`                 //标签 admin: 管理员 normal: 普通
	CreatedTime     int64            `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 秒级时间戳 只读
	Type            string           `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`               //auto:自动化 manual:手动触发
	If              string           `protobuf:"bytes,6,opt,name=if,proto3" json:"if,omitempty"`                    //多种触发方式
	When            string           `protobuf:"bytes,7,opt,name=when,proto3" json:"when,omitempty"`                //手动触发模式不生效
	Then            string           `protobuf:"bytes,8,opt,name=then,proto3" json:"then,omitempty"`                //触发后执行的动作
	Status          int64            `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`           // 状态（1启用 2禁用 3异常）
	Reason          string           `protobuf:"bytes,25,opt,name=reason,proto3" json:"reason,omitempty"`           //异常情况的描述说明
	HeadImg         string           `protobuf:"bytes,10,opt,name=headImg,proto3" json:"headImg,omitempty"`
	IsUpdateHeadImg bool             `protobuf:"varint,11,opt,name=isUpdateHeadImg,proto3" json:"isUpdateHeadImg,omitempty"` //只有这个参数为true的时候才会更新图片,传参为图片的file path
	Logo            string           `protobuf:"bytes,23,opt,name=logo,proto3" json:"logo,omitempty"`                        //logoid
	LastRunTime     int64            `protobuf:"varint,13,opt,name=lastRunTime,proto3" json:"lastRunTime,omitempty"`         //最后一次执行时间 秒级时间戳 只读
	ProductID       string           `protobuf:"bytes,16,opt,name=productID,proto3" json:"productID,omitempty"`              //产品id
	DeviceName      string           `protobuf:"bytes,17,opt,name=deviceName,proto3" json:"deviceName,omitempty"`            //设备名称
	DeviceAlias     string           `protobuf:"bytes,18,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"`          //设备别名(只读)
	DeviceMode      string           `protobuf:"bytes,19,opt,name=deviceMode,proto3" json:"deviceMode,omitempty"`            //设备模式 single:单设备 multi:多设备
	Body            string           `protobuf:"bytes,20,opt,name=body,proto3" json:"body,omitempty"`                        //自定义字段
	UpdatedTime     int64            `protobuf:"varint,22,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`         //更新时间
	IsCommon        int64            `protobuf:"varint,24,opt,name=isCommon,proto3" json:"isCommon,omitempty"`               //是否是常用的
}

func (x *SceneInfo) Reset() {
	*x = SceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfo) ProtoMessage() {}

func (x *SceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfo.ProtoReflect.Descriptor instead.
func (*SceneInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{21}
}

func (x *SceneInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SceneInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SceneInfo) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *SceneInfo) GetFlowPath() []*SceneFlowInfo {
	if x != nil {
		return x.FlowPath
	}
	return nil
}

func (x *SceneInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SceneInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *SceneInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneInfo) GetIf() string {
	if x != nil {
		return x.If
	}
	return ""
}

func (x *SceneInfo) GetWhen() string {
	if x != nil {
		return x.When
	}
	return ""
}

func (x *SceneInfo) GetThen() string {
	if x != nil {
		return x.Then
	}
	return ""
}

func (x *SceneInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SceneInfo) GetHeadImg() string {
	if x != nil {
		return x.HeadImg
	}
	return ""
}

func (x *SceneInfo) GetIsUpdateHeadImg() bool {
	if x != nil {
		return x.IsUpdateHeadImg
	}
	return false
}

func (x *SceneInfo) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *SceneInfo) GetLastRunTime() int64 {
	if x != nil {
		return x.LastRunTime
	}
	return 0
}

func (x *SceneInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SceneInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SceneInfo) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *SceneInfo) GetDeviceMode() string {
	if x != nil {
		return x.DeviceMode
	}
	return ""
}

func (x *SceneInfo) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *SceneInfo) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *SceneInfo) GetIsCommon() int64 {
	if x != nil {
		return x.IsCommon
	}
	return 0
}

type SceneManuallyTriggerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneID     int64  `protobuf:"varint,1,opt,name=sceneID,proto3" json:"sceneID,omitempty"`        //场景id
	TriggerType string `protobuf:"bytes,2,opt,name=triggerType,proto3" json:"triggerType,omitempty"` //触发方式,空为手动触发
}

func (x *SceneManuallyTriggerReq) Reset() {
	*x = SceneManuallyTriggerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneManuallyTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneManuallyTriggerReq) ProtoMessage() {}

func (x *SceneManuallyTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneManuallyTriggerReq.ProtoReflect.Descriptor instead.
func (*SceneManuallyTriggerReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{22}
}

func (x *SceneManuallyTriggerReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *SceneManuallyTriggerReq) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

type SceneLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *PageInfo  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`           // 分页信息 只获取一个则不填
	SceneID   int64      `protobuf:"varint,2,opt,name=sceneID,proto3" json:"sceneID,omitempty"`    //场景id
	SceneName string     `protobuf:"bytes,5,opt,name=sceneName,proto3" json:"sceneName,omitempty"` //场景名称
	TimeRange *TimeRange `protobuf:"bytes,3,opt,name=timeRange,proto3" json:"timeRange,omitempty"` // 时间范围
	Status    int64      `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`      // 状态（1成功 2失败）
}

func (x *SceneLogIndexReq) Reset() {
	*x = SceneLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogIndexReq) ProtoMessage() {}

func (x *SceneLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogIndexReq.ProtoReflect.Descriptor instead.
func (*SceneLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{23}
}

func (x *SceneLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SceneLogIndexReq) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *SceneLogIndexReq) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *SceneLogIndexReq) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *SceneLogIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SceneLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SceneLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //告警信息
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *SceneLogIndexResp) Reset() {
	*x = SceneLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogIndexResp) ProtoMessage() {}

func (x *SceneLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogIndexResp.ProtoReflect.Descriptor instead.
func (*SceneLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{24}
}

func (x *SceneLogIndexResp) GetList() []*SceneLog {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SceneLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SceneLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneID     int64             `protobuf:"varint,1,opt,name=sceneID,proto3" json:"sceneID,omitempty"`         //场景id
	SceneName   string            `protobuf:"bytes,2,opt,name=sceneName,proto3" json:"sceneName,omitempty"`      //场景名
	AreaID      int64             `protobuf:"varint,3,opt,name=areaID,proto3" json:"areaID,omitempty"`           //区域id
	CreatedTime int64             `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 秒级时间戳 只读
	Status      int64             `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`           // 状态（1成功 2失败）
	Type        string            `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`                //"manual":手动触发场景  "auto":自动化
	Trigger     *SceneLogTrigger  `protobuf:"bytes,7,opt,name=trigger,proto3" json:"trigger,omitempty"`          //触发
	Actions     []*SceneLogAction `protobuf:"bytes,8,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *SceneLog) Reset() {
	*x = SceneLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLog) ProtoMessage() {}

func (x *SceneLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLog.ProtoReflect.Descriptor instead.
func (*SceneLog) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{25}
}

func (x *SceneLog) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *SceneLog) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *SceneLog) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *SceneLog) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *SceneLog) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneLog) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneLog) GetTrigger() *SceneLogTrigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *SceneLog) GetActions() []*SceneLogAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type SceneLogAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string                `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`         //执行类型(目前只记录设备属性控制)
	Status   int64                 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`    // 状态（1成功 2失败）
	Code     int64                 `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`        //错误码
	Msg      string                `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`           //错误信息
	MsgToken string                `protobuf:"bytes,6,opt,name=msgToken,proto3" json:"msgToken,omitempty"` //调用id
	Device   *SceneLogActionDevice `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Alarm    *SceneLogActionAlarm  `protobuf:"bytes,7,opt,name=alarm,proto3" json:"alarm,omitempty"`
	Delay    int64                 `protobuf:"varint,8,opt,name=delay,proto3" json:"delay,omitempty"` //延时的秒数
	Scene    *LogActionScene       `protobuf:"bytes,9,opt,name=scene,proto3" json:"scene,omitempty"`  //执行场景
}

func (x *SceneLogAction) Reset() {
	*x = SceneLogAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogAction) ProtoMessage() {}

func (x *SceneLogAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogAction.ProtoReflect.Descriptor instead.
func (*SceneLogAction) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{26}
}

func (x *SceneLogAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneLogAction) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneLogAction) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SceneLogAction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SceneLogAction) GetMsgToken() string {
	if x != nil {
		return x.MsgToken
	}
	return ""
}

func (x *SceneLogAction) GetDevice() *SceneLogActionDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *SceneLogAction) GetAlarm() *SceneLogActionAlarm {
	if x != nil {
		return x.Alarm
	}
	return nil
}

func (x *SceneLogAction) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *SceneLogAction) GetScene() *LogActionScene {
	if x != nil {
		return x.Scene
	}
	return nil
}

type LogActionScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneID   int64  `protobuf:"varint,1,opt,name=sceneID,proto3" json:"sceneID,omitempty"`
	SceneName string `protobuf:"bytes,2,opt,name=sceneName,proto3" json:"sceneName,omitempty"`
}

func (x *LogActionScene) Reset() {
	*x = LogActionScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogActionScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogActionScene) ProtoMessage() {}

func (x *LogActionScene) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogActionScene.ProtoReflect.Descriptor instead.
func (*LogActionScene) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{27}
}

func (x *LogActionScene) GetSceneID() int64 {
	if x != nil {
		return x.SceneID
	}
	return 0
}

func (x *LogActionScene) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

type SceneLogActionAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"` //告警模式  trigger: 触发告警  relieve: 解除告警
}

func (x *SceneLogActionAlarm) Reset() {
	*x = SceneLogActionAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogActionAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogActionAlarm) ProtoMessage() {}

func (x *SceneLogActionAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogActionAlarm.ProtoReflect.Descriptor instead.
func (*SceneLogActionAlarm) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{28}
}

func (x *SceneLogActionAlarm) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type SceneLogActionDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string                       `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`               //设备执行的类型
	ProductID   string                       `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`     //产品ID
	ProductName string                       `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"` //产品名称
	DeviceName  string                       `protobuf:"bytes,4,opt,name=deviceName,proto3" json:"deviceName,omitempty"`   //设备id
	DeviceAlias string                       `protobuf:"bytes,5,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"` //设备昵称
	Values      []*SceneLogActionDeviceValue `protobuf:"bytes,8,rep,name=values,proto3" json:"values,omitempty"`           //执行的值
}

func (x *SceneLogActionDevice) Reset() {
	*x = SceneLogActionDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogActionDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogActionDevice) ProtoMessage() {}

func (x *SceneLogActionDevice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogActionDevice.ProtoReflect.Descriptor instead.
func (*SceneLogActionDevice) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{29}
}

func (x *SceneLogActionDevice) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneLogActionDevice) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SceneLogActionDevice) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *SceneLogActionDevice) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SceneLogActionDevice) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *SceneLogActionDevice) GetValues() []*SceneLogActionDeviceValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type SceneLogActionDeviceValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID   string `protobuf:"bytes,6,opt,name=dataID,proto3" json:"dataID,omitempty"`     //触发的id
	DataName string `protobuf:"bytes,7,opt,name=dataName,proto3" json:"dataName,omitempty"` //触发id的名字
	Value    string `protobuf:"bytes,8,opt,name=value,proto3" json:"value,omitempty"`       //执行的值
}

func (x *SceneLogActionDeviceValue) Reset() {
	*x = SceneLogActionDeviceValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogActionDeviceValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogActionDeviceValue) ProtoMessage() {}

func (x *SceneLogActionDeviceValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogActionDeviceValue.ProtoReflect.Descriptor instead.
func (*SceneLogActionDeviceValue) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{30}
}

func (x *SceneLogActionDeviceValue) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *SceneLogActionDeviceValue) GetDataName() string {
	if x != nil {
		return x.DataName
	}
	return ""
}

func (x *SceneLogActionDeviceValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SceneLogTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`     //触发类型
	Time   int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`    //触发时间
	Device *SceneLogTriggerDevice `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"` //设备触发类型:触发设备
}

func (x *SceneLogTrigger) Reset() {
	*x = SceneLogTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogTrigger) ProtoMessage() {}

func (x *SceneLogTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogTrigger.ProtoReflect.Descriptor instead.
func (*SceneLogTrigger) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{31}
}

func (x *SceneLogTrigger) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneLogTrigger) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SceneLogTrigger) GetDevice() *SceneLogTriggerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type SceneLogTriggerDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`               ////触发类型  connected:上线 disConnected:下线 reportProperty:属性上报 reportEvent: 事件上报
	ProductID   string `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`     //设备触发
	DeviceName  string `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`   //设备触发
	DeviceAlias string `protobuf:"bytes,7,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"` //设备昵称
	DataID      string `protobuf:"bytes,4,opt,name=dataID,proto3" json:"dataID,omitempty"`           //触发的id
	DataName    string `protobuf:"bytes,5,opt,name=dataName,proto3" json:"dataName,omitempty"`       //触发id的名字
	Value       string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`             //触发的值
}

func (x *SceneLogTriggerDevice) Reset() {
	*x = SceneLogTriggerDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneLogTriggerDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneLogTriggerDevice) ProtoMessage() {}

func (x *SceneLogTriggerDevice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneLogTriggerDevice.ProtoReflect.Descriptor instead.
func (*SceneLogTriggerDevice) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{32}
}

func (x *SceneLogTriggerDevice) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneLogTriggerDevice) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SceneLogTriggerDevice) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SceneLogTriggerDevice) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *SceneLogTriggerDevice) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *SceneLogTriggerDevice) GetDataName() string {
	if x != nil {
		return x.DataName
	}
	return ""
}

func (x *SceneLogTriggerDevice) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PageInfo_OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排序的字段名
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// 排序方式：1 从小到大, 2 从大到小
	Sort int64 `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *PageInfo_OrderBy) Reset() {
	*x = PageInfo_OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo_OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo_OrderBy) ProtoMessage() {}

func (x *PageInfo_OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo_OrderBy.ProtoReflect.Descriptor instead.
func (*PageInfo_OrderBy) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PageInfo_OrderBy) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *PageInfo_OrderBy) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

var File_proto_ud_proto protoreflect.FileDescriptor

var file_proto_ud_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x75, 0x64, 0x22, 0x18, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75,
	0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x33, 0x0a, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22,
	0x33, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x22, 0x4a, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xd4, 0x02, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x64,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x51, 0x0a, 0x14, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x04, 0x0a, 0x0b, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xcc, 0x02, 0x0a,
	0x14, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x12, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x13, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x16, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x44, 0x73, 0x22, 0x56, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x22, 0xbe, 0x02, 0x0a,
	0x09, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x41, 0x0a,
	0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x22, 0x5d, 0x0a, 0x11, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x4d, 0x0a, 0x12, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa1,
	0x03, 0x0a, 0x11, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x12, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x51, 0x0a, 0x0d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x05, 0x0a, 0x09, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x66, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x65,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x68, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x68, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x55, 0x0a,
	0x17, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x10, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x64,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x85, 0x02, 0x0a, 0x08, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c,
	0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9f, 0x02,
	0x0a, 0x0e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2d, 0x0a, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x64, 0x2e, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x22,
	0x48, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x14, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x19, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x6c, 0x0a, 0x0f, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75,
	0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22,
	0xd5, 0x01, 0x0a, 0x15, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xdb, 0x07, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2b,
	0x0a, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0a,
	0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x14, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x6c, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x75, 0x64, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x75, 0x64, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2b,
	0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0a,
	0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x75, 0x64,
	0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x36, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e,
	0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x17, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x64,
	0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x11, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x75, 0x64, 0x2e,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x34, 0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65,
	0x61, 0x6c, 0x12, 0x16, 0x2e, 0x75, 0x64, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x07, 0x5a, 0x05, 0x70, 0x62, 0x2f, 0x75, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ud_proto_rawDescOnce sync.Once
	file_proto_ud_proto_rawDescData = file_proto_ud_proto_rawDesc
)

func file_proto_ud_proto_rawDescGZIP() []byte {
	file_proto_ud_proto_rawDescOnce.Do(func() {
		file_proto_ud_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ud_proto_rawDescData)
	})
	return file_proto_ud_proto_rawDescData
}

var file_proto_ud_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_proto_ud_proto_goTypes = []interface{}{
	(*WithID)(nil),                    // 0: ud.WithID
	(*Empty)(nil),                     // 1: ud.Empty
	(*PageInfo)(nil),                  // 2: ud.PageInfo
	(*TimeRange)(nil),                 // 3: ud.TimeRange
	(*DeviceCore)(nil),                // 4: ud.DeviceCore
	(*AlarmRecordIndexReq)(nil),       // 5: ud.AlarmRecordIndexReq
	(*AlarmRecordIndexResp)(nil),      // 6: ud.AlarmRecordIndexResp
	(*AlarmRecord)(nil),               // 7: ud.AlarmRecord
	(*AlarmRecordCreateReq)(nil),      // 8: ud.AlarmRecordCreateReq
	(*AlarmRecordDealReq)(nil),        // 9: ud.AlarmRecordDealReq
	(*AlarmSceneIndexReq)(nil),        // 10: ud.AlarmSceneIndexReq
	(*AlarmSceneDeleteReq)(nil),       // 11: ud.AlarmSceneDeleteReq
	(*AlarmSceneMultiSaveReq)(nil),    // 12: ud.AlarmSceneMultiSaveReq
	(*AlarmSceneIndexResp)(nil),       // 13: ud.AlarmSceneIndexResp
	(*AlarmInfo)(nil),                 // 14: ud.AlarmInfo
	(*AlarmNotify)(nil),               // 15: ud.AlarmNotify
	(*AlarmInfoIndexReq)(nil),         // 16: ud.AlarmInfoIndexReq
	(*AlarmInfoIndexResp)(nil),        // 17: ud.AlarmInfoIndexResp
	(*SceneInfoIndexReq)(nil),         // 18: ud.SceneInfoIndexReq
	(*SceneInfoIndexResp)(nil),        // 19: ud.SceneInfoIndexResp
	(*SceneFlowInfo)(nil),             // 20: ud.SceneFlowInfo
	(*SceneInfo)(nil),                 // 21: ud.SceneInfo
	(*SceneManuallyTriggerReq)(nil),   // 22: ud.SceneManuallyTriggerReq
	(*SceneLogIndexReq)(nil),          // 23: ud.SceneLogIndexReq
	(*SceneLogIndexResp)(nil),         // 24: ud.SceneLogIndexResp
	(*SceneLog)(nil),                  // 25: ud.SceneLog
	(*SceneLogAction)(nil),            // 26: ud.SceneLogAction
	(*LogActionScene)(nil),            // 27: ud.LogActionScene
	(*SceneLogActionAlarm)(nil),       // 28: ud.SceneLogActionAlarm
	(*SceneLogActionDevice)(nil),      // 29: ud.SceneLogActionDevice
	(*SceneLogActionDeviceValue)(nil), // 30: ud.SceneLogActionDeviceValue
	(*SceneLogTrigger)(nil),           // 31: ud.SceneLogTrigger
	(*SceneLogTriggerDevice)(nil),     // 32: ud.SceneLogTriggerDevice
	(*PageInfo_OrderBy)(nil),          // 33: ud.PageInfo.OrderBy
}
var file_proto_ud_proto_depIdxs = []int32{
	33, // 0: ud.PageInfo.orders:type_name -> ud.PageInfo.OrderBy
	2,  // 1: ud.AlarmRecordIndexReq.page:type_name -> ud.PageInfo
	3,  // 2: ud.AlarmRecordIndexReq.timeRange:type_name -> ud.TimeRange
	7,  // 3: ud.AlarmRecordIndexResp.list:type_name -> ud.AlarmRecord
	21, // 4: ud.AlarmSceneIndexResp.scenes:type_name -> ud.SceneInfo
	15, // 5: ud.AlarmInfo.notifies:type_name -> ud.AlarmNotify
	2,  // 6: ud.AlarmInfoIndexReq.page:type_name -> ud.PageInfo
	14, // 7: ud.AlarmInfoIndexResp.list:type_name -> ud.AlarmInfo
	2,  // 8: ud.SceneInfoIndexReq.page:type_name -> ud.PageInfo
	21, // 9: ud.SceneInfoIndexResp.list:type_name -> ud.SceneInfo
	20, // 10: ud.SceneInfo.FlowPath:type_name -> ud.SceneFlowInfo
	2,  // 11: ud.SceneLogIndexReq.page:type_name -> ud.PageInfo
	3,  // 12: ud.SceneLogIndexReq.timeRange:type_name -> ud.TimeRange
	25, // 13: ud.SceneLogIndexResp.list:type_name -> ud.SceneLog
	31, // 14: ud.SceneLog.trigger:type_name -> ud.SceneLogTrigger
	26, // 15: ud.SceneLog.actions:type_name -> ud.SceneLogAction
	29, // 16: ud.SceneLogAction.device:type_name -> ud.SceneLogActionDevice
	28, // 17: ud.SceneLogAction.alarm:type_name -> ud.SceneLogActionAlarm
	27, // 18: ud.SceneLogAction.scene:type_name -> ud.LogActionScene
	30, // 19: ud.SceneLogActionDevice.values:type_name -> ud.SceneLogActionDeviceValue
	32, // 20: ud.SceneLogTrigger.device:type_name -> ud.SceneLogTriggerDevice
	21, // 21: ud.rule.sceneInfoCreate:input_type -> ud.SceneInfo
	21, // 22: ud.rule.sceneInfoUpdate:input_type -> ud.SceneInfo
	0,  // 23: ud.rule.sceneInfoDelete:input_type -> ud.WithID
	18, // 24: ud.rule.sceneInfoIndex:input_type -> ud.SceneInfoIndexReq
	0,  // 25: ud.rule.sceneInfoRead:input_type -> ud.WithID
	22, // 26: ud.rule.sceneManuallyTrigger:input_type -> ud.SceneManuallyTriggerReq
	23, // 27: ud.rule.sceneLogIndex:input_type -> ud.SceneLogIndexReq
	14, // 28: ud.rule.alarmInfoCreate:input_type -> ud.AlarmInfo
	14, // 29: ud.rule.alarmInfoUpdate:input_type -> ud.AlarmInfo
	0,  // 30: ud.rule.alarmInfoDelete:input_type -> ud.WithID
	16, // 31: ud.rule.alarmInfoIndex:input_type -> ud.AlarmInfoIndexReq
	0,  // 32: ud.rule.alarmInfoRead:input_type -> ud.WithID
	12, // 33: ud.rule.alarmSceneMultiCreate:input_type -> ud.AlarmSceneMultiSaveReq
	11, // 34: ud.rule.alarmSceneDelete:input_type -> ud.AlarmSceneDeleteReq
	10, // 35: ud.rule.alarmSceneIndex:input_type -> ud.AlarmSceneIndexReq
	5,  // 36: ud.rule.alarmRecordIndex:input_type -> ud.AlarmRecordIndexReq
	8,  // 37: ud.rule.alarmRecordCreate:input_type -> ud.AlarmRecordCreateReq
	9,  // 38: ud.rule.alarmRecordDeal:input_type -> ud.AlarmRecordDealReq
	0,  // 39: ud.rule.sceneInfoCreate:output_type -> ud.WithID
	1,  // 40: ud.rule.sceneInfoUpdate:output_type -> ud.Empty
	1,  // 41: ud.rule.sceneInfoDelete:output_type -> ud.Empty
	19, // 42: ud.rule.sceneInfoIndex:output_type -> ud.SceneInfoIndexResp
	21, // 43: ud.rule.sceneInfoRead:output_type -> ud.SceneInfo
	1,  // 44: ud.rule.sceneManuallyTrigger:output_type -> ud.Empty
	24, // 45: ud.rule.sceneLogIndex:output_type -> ud.SceneLogIndexResp
	0,  // 46: ud.rule.alarmInfoCreate:output_type -> ud.WithID
	1,  // 47: ud.rule.alarmInfoUpdate:output_type -> ud.Empty
	1,  // 48: ud.rule.alarmInfoDelete:output_type -> ud.Empty
	17, // 49: ud.rule.alarmInfoIndex:output_type -> ud.AlarmInfoIndexResp
	14, // 50: ud.rule.alarmInfoRead:output_type -> ud.AlarmInfo
	1,  // 51: ud.rule.alarmSceneMultiCreate:output_type -> ud.Empty
	1,  // 52: ud.rule.alarmSceneDelete:output_type -> ud.Empty
	13, // 53: ud.rule.alarmSceneIndex:output_type -> ud.AlarmSceneIndexResp
	6,  // 54: ud.rule.alarmRecordIndex:output_type -> ud.AlarmRecordIndexResp
	1,  // 55: ud.rule.alarmRecordCreate:output_type -> ud.Empty
	1,  // 56: ud.rule.alarmRecordDeal:output_type -> ud.Empty
	39, // [39:57] is the sub-list for method output_type
	21, // [21:39] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_ud_proto_init() }
func file_proto_ud_proto_init() {
	if File_proto_ud_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ud_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecordIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecordIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecordCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRecordDealReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneMultiSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmSceneIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneFlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneManuallyTriggerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogActionScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogActionAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogActionDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogActionDeviceValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneLogTriggerDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo_OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ud_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ud_proto_goTypes,
		DependencyIndexes: file_proto_ud_proto_depIdxs,
		MessageInfos:      file_proto_ud_proto_msgTypes,
	}.Build()
	File_proto_ud_proto = out.File
	file_proto_ud_proto_rawDesc = nil
	file_proto_ud_proto_goTypes = nil
	file_proto_ud_proto_depIdxs = nil
}
