syntax = "proto3";

package ud;
option go_package="pb/ud";

message WithID {
  int64 id = 1;
}
message Empty{
}

message PageInfo{
  int64 page = 1;
  int64 size = 2;
  repeated OrderBy orders = 3;
  message OrderBy {
    //排序的字段名
    string field = 1;
    //排序方式：1 从小到大, 2 从大到小
    int64 sort = 2;
  }
}
message TimeRange{
  int64 start = 1;
  int64 end = 2;
}
message DeviceCore{
  string   productID = 1; //产品id
  string  deviceName = 2; //设备名称
}


//规则控制
service rule {
  //场景
  rpc sceneInfoCreate(SceneInfo) returns(WithID);
  rpc sceneInfoUpdate(SceneInfo) returns(Empty);
  rpc sceneInfoDelete(WithID) returns(Empty);
  rpc sceneInfoIndex(SceneInfoIndexReq) returns(SceneInfoIndexResp);
  rpc sceneInfoRead(WithID) returns(SceneInfo);
  rpc sceneManuallyTrigger(SceneManuallyTriggerReq) returns (Empty);//手动触发场景
  rpc sceneLogIndex(SceneLogIndexReq) returns(SceneLogIndexResp);


  rpc alarmInfoCreate(AlarmInfo)returns(WithID);
  rpc alarmInfoUpdate(AlarmInfo)returns(Empty);
  rpc alarmInfoDelete(WithID)returns(Empty);
  rpc alarmInfoIndex(AlarmInfoIndexReq)returns(AlarmInfoIndexResp);
  rpc alarmInfoRead(WithID)returns(AlarmInfo);

  //告警关联场景联动
  rpc alarmSceneMultiCreate(AlarmSceneMultiSaveReq)returns(Empty);//绑定场景联动
  rpc alarmSceneDelete(AlarmSceneDeleteReq)returns(Empty);//解绑场景联动
  rpc alarmSceneIndex(AlarmSceneIndexReq)returns(AlarmSceneIndexResp);//解绑场景联动

  //告警记录
  rpc alarmRecordIndex(AlarmRecordIndexReq)returns(AlarmRecordIndexResp);
  rpc alarmRecordCreate(AlarmRecordCreateReq)returns(Empty);
  rpc alarmRecordDeal(AlarmRecordDealReq)returns(Empty);//处理告警
}


message AlarmRecordIndexReq{
  int64 alarmID = 1;//告警配置ID
  string alarmCode =10;
  int64 areaID =8;
  string areaIDPath =9;
  string alarmName =5;//告警名称
  PageInfo page       = 2;  // 分页信息 获取全部不填
  TimeRange timeRange = 3;       // 时间范围
  repeated int64 dealStatus = 4;//告警记录状态（1无告警 2告警中 3已处理 4 无效）
  string deviceName =6;//告警设备ID
  string deviceAlias =7;//告警设备名称
}

message AlarmRecordIndexResp{
  repeated AlarmRecord list =1;
  int64  total = 2;//总数(只有分页的时候会返回)
}

message AlarmRecord{
  int64 id = 1;//编号
  int64 alarmID = 2;//告警记录ID
  int64 areaID =18;//告警的区域ID
  string alarmName =12;//告警名称
  string triggerType = 3;//触发类型 device:设备触发 timer:定时触发 weather:天气触发
  string triggerSubType =16;
  string triggerDetail = 17;//设备触发的会有触发详情json
  string productID = 4;//触发产品id
  string deviceName = 5;//触发设备ID
  string deviceAlias = 15;//设备名称
  string sceneName = 6;//场景名称
  int64 sceneID = 7;//场景ID
  int64 level = 8;//告警配置级别（1提醒 2一般 3严重 4紧急 5超紧急）
  int64 lastAlarm = 9;//最新告警时间
  int64 createdTime = 10;//创建时间
  int64 dealStatus = 11;//告警记录状态（1无告警 2告警中 3已处理 4 无效）
  int64 alarmCount =13; //告警次数
  string desc =14; //描述
}

message AlarmRecordCreateReq{
  int64 alarmID = 1;//告警记录ID(如果不填写sceneID则需要填写告警ID,指定告警)
  string triggerType = 3;//触发类型(设备触发1,其他2)
  string triggerSubType =10;
  string triggerDetail = 11;//设备触发的会有触发详情json
  string productID = 4;//触发产品id
  string deviceName = 5;//触发设备名称
  string deviceAlias = 6;//触发设备昵称
  string sceneName = 7;//场景名称
  int64 sceneID = 8;//场景ID
  string mode =9;//告警模式  trigger: 触发告警  relieve: 解除告警

}

message AlarmRecordDealReq{
  int64 id =1;
  int64 handle = 2; //1 无效(告警无效) 2 派单(走工作流)
}

message AlarmSceneIndexReq{
  int64 alarmID = 1;//告警配置ID
}

message  AlarmSceneDeleteReq{
  int64 alarmID = 1;//告警配置ID
  int64 sceneID = 2;//场景id
}

message  AlarmSceneMultiSaveReq{
  int64 alarmID = 1;//告警配置ID
  repeated int64 sceneIDs = 2;//场景id
}
message AlarmSceneIndexResp{
  int64 alarmID = 1;//告警配置ID
  repeated SceneInfo scenes = 2;//场景列表,只返回基础信息
}


message AlarmInfo{
  int64 id = 1;//编号
  string code = 12;
  string name = 2;//告警配置名称
  string desc = 3;//告警配置说明
  int64 level = 4;//告警配置级别（1提醒 2一般 3严重 4紧急 5超紧急）
  int64 status = 5;//告警配置状态（1启用 2禁用 3不可用） 不可用一般为绑定的区域被删除
  string reason = 11;//不可用原因
  int64 createdTime = 6;//创建时间
  repeated int64 sceneIDs =10;//绑定的场景
  repeated AlarmNotify notifies = 7;
  repeated int64 userIDs = 8; //指定用户ID
  repeated string accounts = 9;
}

message AlarmNotify {
  string type        = 1; //通知类型
  int64 templateID = 2; //模版code
}


message AlarmInfoIndexReq{
  PageInfo page       = 1;  // 分页信息 只获取一个则不填
  string name = 2;//告警配置名称 模糊查询
  string code = 12;
}

message AlarmInfoIndexResp{
  repeated AlarmInfo list = 1;//告警信息
  int64  total = 2;//总数(只有分页的时候会返回)
}


message SceneInfoIndexReq{
  PageInfo page = 1;//分页信息 只获取一个则不填
  int64 areaID = 6;//所属区域
  string tag =7;//标签 admin: 管理员 normal: 普通
  string name =2;//场景名 模糊查询
  int64 status = 3;//状态: 1启用 2禁用
  string type = 4;//auto:自动化 manual:手动触发
  int64 alarmID = 5;//告警配置ID过滤
  string deviceMode =10;//设备模式 single:单设备 multi:多设备
  string   productID = 8; //产品id
  string  deviceName = 9; //设备名称
  int64 deviceFilterMode=13;//设备过滤模式: 1,过滤触发或执行(默认) 2,过滤触发 3,过滤执行
  string hasActionType =11;//过滤有某个执行类型
  repeated int64 sceneIDs =12;
  int64 isCommon =24;//是否是常用的
}

message SceneInfoIndexResp{
  repeated SceneInfo list = 1;//设备信息
  int64  total = 2;//总数(只有分页的时候会返回)
}

message SceneFlowInfo{
  string type =1;//if then
  string subType =2;//timer:定时触发 notify: 通知 delay:延迟  device:设备输出或设备触发
  string info =3;//内容
}

message SceneInfo{
  int64 id = 1;//场景id
  string name =3;//场景名
  string desc = 4;//描述
  int64 areaID =21;//区域id
  repeated SceneFlowInfo FlowPath =15; //执行的流程
  string tag =12;//标签 admin: 管理员 normal: 普通
  int64 createdTime = 5;//创建时间 秒级时间戳 只读
  string type = 14;//auto:自动化 manual:手动触发
  string if = 6;//多种触发方式
  string when = 7;//手动触发模式不生效
  string then = 8; //触发后执行的动作
  int64 status = 9;// 状态（1启用 2禁用 3异常）
  string reason = 25;//异常情况的描述说明
  string headImg = 10;
  bool isUpdateHeadImg = 11;//只有这个参数为true的时候才会更新图片,传参为图片的file path
  string logo =23;//logoid
  int64 lastRunTime = 13;//最后一次执行时间 秒级时间戳 只读
  string   productID = 16; //产品id
  string  deviceName = 17; //设备名称
  string deviceAlias =18;//设备别名(只读)
  string deviceMode =19;//设备模式 single:单设备 multi:多设备
  string body =20;//自定义字段
  int64 updatedTime=22;//更新时间
  int64 isCommon =24;//是否是常用的
}

message SceneManuallyTriggerReq{
  int64 sceneID = 1;//场景id
  string triggerType =2;//触发方式,空为手动触发
}

message SceneLogIndexReq{
  PageInfo page       = 1;  // 分页信息 只获取一个则不填
  int64 sceneID = 2;//场景id
  string sceneName =5;//场景名称
  TimeRange timeRange = 3;       // 时间范围
  int64 status = 4;// 状态（1成功 2失败）
}

message SceneLogIndexResp{
  repeated SceneLog list = 1;//告警信息
  int64  total = 2;//总数(只有分页的时候会返回)
}

message SceneLog {
  int64 sceneID = 1;//场景id
  string sceneName =2;//场景名
  int64 areaID =3;//区域id
  int64 createdTime = 4;//创建时间 秒级时间戳 只读
  int64 status = 5;// 状态（1成功 2失败）
  string type =6;//"manual":手动触发场景  "auto":自动化
  SceneLogTrigger trigger =7;//触发
  repeated SceneLogAction actions =8;
}

message SceneLogAction {
  string type =1;//执行类型(目前只记录设备属性控制)
  int64 status = 3;// 状态（1成功 2失败）
  int64 code =4;//错误码
  string msg =5;//错误信息
  string msgToken=6;//调用id
  SceneLogActionDevice device =2;
  SceneLogActionAlarm alarm =7;
  int64 delay =8;//延时的秒数
  LogActionScene scene =9;//执行场景
}

message LogActionScene{
 int64 sceneID =1;
 string sceneName =2;
}

message SceneLogActionAlarm{
  string mode =1;//告警模式  trigger: 触发告警  relieve: 解除告警
}

message SceneLogActionDevice{
  string type =1; //设备执行的类型
  string productID =2;//产品ID
  string productName = 3;//产品名称
  string deviceName =4;//设备id
  string deviceAlias = 5;//设备昵称
  repeated SceneLogActionDeviceValue values =8;//执行的值
}

message SceneLogActionDeviceValue {
  string dataID =6;//触发的id
  string dataName = 7 ;//触发id的名字
  string value =8;//执行的值
}

message SceneLogTrigger {
  string type = 1 ;//触发类型
  int64 time =2;//触发时间
  SceneLogTriggerDevice device = 3;//设备触发类型:触发设备
}

message SceneLogTriggerDevice{
  string type =1; ////触发类型  connected:上线 disConnected:下线 reportProperty:属性上报 reportEvent: 事件上报
  string productID =2;//设备触发
  string deviceName =3;//设备触发
  string deviceAlias = 7;//设备昵称
  string dataID =4;//触发的id
  string dataName = 5 ;//触发id的名字
  string value =6;//触发的值
}