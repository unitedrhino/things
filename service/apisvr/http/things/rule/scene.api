info(
    title: "场景联动信息模块"
    desc: "场景联动信息模块"
    author: "杨磊"
    email: "603685348@qq.com"
    version: "v1"
)

@server(
    group: things/rule/scene/info
    prefix: /api/v1/things/rule/scene/info
    accessCodePrefix: "thingsRuleScene"
    accessNamePrefix: "场景联动"
    accessGroup: "规则引擎"
    middleware:  CheckTokenWare,InitCtxsWare
)
service api {
    @doc "新增场景"
    @handler create
    post /create (SceneInfo) returns (WithID)
    @doc "更新场景"
    @handler update
    post /update (SceneInfo) returns ()
    @doc "删除场景"
    @handler delete
    post /delete (WithID) returns ()
    @doc "获取场景信息列表"
    @handler index
    post /index (SceneInfoIndexReq) returns (SceneInfoIndexResp)
    @doc "获取场景信息详情"
    @handler read
    post /read (WithID) returns (SceneInfo)
    @doc "手动触发场景"
    @handler ManuallyTrigger
    post /manually-trigger (WithID) returns ()
}

@server(
    group: things/rule/scene/log
    prefix: /api/v1/things/rule/scene/log
    accessCodePrefix: "thingsRuleScene"
    accessNamePrefix: "场景联动"
    accessGroup: "规则引擎"
    middleware:  CheckTokenWare,InitCtxsWare
)
service api {
    @doc "获取场景日志列表"
    @handler index
    post /index (SceneLogIndexReq) returns (SceneLogIndexResp)
}


type (
    SceneInfoCreateReq  {
        SceneInfo
    }
    SceneInfoUpdateReq  {
        SceneInfo
    }

    SceneInfoIndexReq  {
        Page *PageInfo `json:"page,optional"`             //分页信息 只获取一个则不填
        Name        string    `json:"name,optional"` //场景名模糊查询
        Tag         string  `json:"tag,optional"`//标签 admin: 管理员 normal: 普通
        AreaID      int64 `json:"areaID,optional,string"`
        SceneIDs []int64 `json:"sceneIDs,optional"`//根据场景ID来过滤
        Type  string    `json:"type,optional"` //触发类型 auto manual:手动触发
        Status        int64    `json:"status,optional"` //状态（1启用 2禁用 3异常）
        AlarmID int64 `json:"alarmID,optional"` //告警id
        DeviceMode string `json:"deviceMode,optional"` //设备模式
        ProductID  string `json:"productID,optional"`           //产品id
        DeviceName string `json:"deviceName,optional"`           //设备名
        DeviceFilterMode int64 `json:"deviceFilterMode,optional"`//设备过滤模式: 1,过滤触发或执行(默认) 2,过滤触发 3,过滤执行
        HasActionType string `json:"hasActionType,optional"`//过滤有某个执行类型
        IsCommon int64 `json:"isCommon,optional"`//是否是常用的
        IsOnlyCore int64 `json:"isOnlyCore,optional"`//不返回if,when和then
    }
    SceneInfoIndexResp  {
        List []*SceneInfo `json:"list"`    //场景信息
        PageResp
        Num int64 `json:"num"`              //返回的数量
    }
)

type (
    SceneFlowInfo {
        Type    string `json:"type"`    //流程类型 then
        SubType string `json:"subType"` //子类型 设备执行
        Info    string `json:"info,omitempty"`    //设备执行类型为产品id
    }
    SceneInfo  {
        ID          int64   `json:"id,optional"`
        Name        string  `json:"name,optional"`
        AreaID int64 `json:"areaID,string,optional"`                                                     //项目区域id 只读
        Status      int64   `json:"status,optional"` //状态: 状态（1启用 2禁用 3异常）
        Reason string  `json:"reason,optional"` //异常情况的描述说明
        Tag         string  `json:"tag,optional"`//标签 admin: 管理员 normal: 普通
        IsCommon int64 `json:"isCommon,optional"`//是否是常用的
        Type string  `json:"type,optional"`
        FlowPath    []*SceneFlowInfo `json:"flowPath,optional"` //执行路径
        Desc        string  `json:"desc,optional"`
        CreatedTime int64   `json:"createdTime,optional"`
        If     string  `json:"if,optional"`
        When        string  `json:"when,optional"`
        Then      string `json:"then,optional"`
        HeadImg  string `json:"headImg,optional"`        // 头像
        IsUpdateHeadImg  bool `json:"isUpdateHeadImg,omitempty,optional"`        // 是否更新头像
        Logo string `json:"logo,optional"`
        LastRunTime int64 `json:"lastRunTime,optional"`
        ProductID string `json:"productID,omitempty,optional"`
        DeviceName string `json:"deviceName,omitempty,optional"`
        DeviceAlias string `json:"deviceAlias,omitempty,optional"`//只读
        DeviceMode string `json:"deviceMode,optional"`//设备模式 single:单设备 multi:多设备
        Body string `json:"body,optional"` //自定义字段
        UpdatedTime int64   `json:"updatedTime,optional"`
    }

)

type (
    SceneLogIndexReq  {
        Page      *PageInfo  `json:"page,optional"`           // 分页信息 只获取一个则不填
        SceneID   int64      `json:"sceneID,optional,omitempty"`    //场景id
        SceneName   string      `json:"sceneName,optional,omitempty"`    //场景名称
        Status      int64             `json:"status,optional,omitempty"`           // 状态（1成功 2失败）
        TimeRange *TimeRange `json:"timeRange,optional"` // 时间范围
    }

    SceneLogIndexResp  {
        List  []*SceneLog `json:"list,omitempty"`    //告警信息
        Total int64       `json:"total,omitempty"` //总数(只有分页的时候会返回)
    }

    SceneLog  {
        SceneID     int64             `json:"sceneID,omitempty"`         //场景id
        SceneName     string             `json:"sceneName,omitempty"`         //场景名称
        AreaID      int64             `json:"areaID,string,omitempty"`           //区域id
        CreatedTime int64             `json:"createdTime,omitempty"` //创建时间 秒级时间戳 只读
        Status      int64             `json:"status,omitempty"`           // 状态（1成功 2失败）
        Type        string            `json:"type,omitempty"`                //"manual":手动触发场景  "auto":自动化
        Trigger     *SceneLogTrigger  `json:"trigger,omitempty"`          //触发
        Actions     []*SceneLogAction `json:"actions,omitempty"`
    }

    SceneLogAction  {
        Type     string                `json:"type,omitempty"`         //执行类型(目前只记录设备属性控制)
        Status   int64                 `json:"status,omitempty"`    // 状态（1成功 2失败）
        Code     int64                 `json:"code,omitempty"`        //错误码
        Msg      string                `json:"msg,omitempty"`           //错误信息
        MsgToken string                `json:"msgToken,omitempty"` //调用id
        Delay int64  `json:"delay,omitempty"`//延时秒数
        Device   *SceneLogActionDevice `json:"device,omitempty"`
        Alarm    *SceneLogActionAlarm  `json:"alarm,omitempty"`
        Scene *LogActionScene `json:"scene,omitempty"`
    }

    LogActionScene{
        sceneID int64 `json:"sceneID"`
        sceneName string `json:"sceneName"`
    }
    SceneLogActionAlarm  {
        Mode string `json:"mode,omitempty"` //告警模式  trigger: 触发告警  relieve: 解除告警
    }

    SceneLogActionDevice  {
        Type        string                       `json:"type,omitempty"`               //设备执行的类型
        ProductID   string                       `json:"productID,omitempty"`     //产品ID
        ProductName string                       `json:"productName,omitempty"` //产品名称
        DeviceName  string                       `json:"deviceName,omitempty"`   //设备id
        DeviceAlias string                       `json:"deviceAlias,omitempty"` //设备昵称
        Values      []*SceneLogActionDeviceValue `json:"values,omitempty"`           //执行的值
    }

    SceneLogActionDeviceValue  {
        DataID   string `json:"dataID,omitempty"`     //触发的id
        DataName string `json:"dataName,omitempty"` //触发id的名字
        Value    string `json:"value,omitempty"`       //执行的值
    }

    SceneLogTrigger  {
        Type   string                 `json:"type,omitempty"`     //触发类型
        Time int64  `json:"time"`////触发时间,秒时间戳
        Device *SceneLogTriggerDevice `json:"device,omitempty"` //设备触发类型:触发设备
    }

    SceneLogTriggerDevice  {
        Type       string `json:"type,omitempty"`             ////触发类型  connected:上线 disConnected:下线 reportProperty:属性上报 reportEvent: 事件上报
        ProductID  string `json:"productID,omitempty"`   //设备触发
        DeviceName string `json:"deviceName,omitempty"` //设备触发
        DeviceAlias string                       `json:"deviceAlias,omitempty"` //设备昵称
        DataID     string `json:"dataID,omitempty"`         //触发的id
        DataName   string `json:"dataName,omitempty"`     //触发id的名字
        Value      string `json:"value,omitempty"`           //触发的值
    }
)