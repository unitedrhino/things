syntax = "v1"

info(
    title: "ota升级任务接口"
    desc: "ota升级任务接口"
    author: "Hya"
    email: "1943965929@qq.com"
    version: "v1"
)

@server(
//asdfawefa
    group: things/ota/firmware/job
    prefix: /api/v1/things/ota/firmware/job
    accessCodePrefix: "thingsOtaJob"
    accessNamePrefix: "任务"
    accessGroup: "ota远程升级"
    defaultIsNeedAuth: "true"
    defaultAuthType: "admin"
    middleware:  CheckTokenWare,InitCtxsWare
)
service api{
    //验证升级包

    //创建静态升级批次
    @doc "创建升级任务"
    @handler create
    post /create(OtaFirmwareJobInfo) returns(WithID)
    //获取升级包下的升级任务批次列表
    @doc "获取升级包下的升级任务批次列表"
    @handler index
    post /index(OtaFirmwareJobIndexReq) returns(OtaFirmwareJobInfoIndexResp)
    //查询指定升级批次的详情
    @doc "查询指定升级批次的详情"
    @handler read
    post /read(WithID) returns(OtaFirmwareJobInfo)
    @doc "更新升级批次"
    @handler update
    post /update(OtaFirmwareJobInfo) returns()
}

// OtaFirmwareJobIndexReq 表示根据固件索引的OTA作业请求。
type OtaFirmwareJobIndexReq  {
    Page   *PageInfo `json:"page"`   // 分页信息
    FirmwareID int64    `json:"firmwareID"` // 固件ID
}
// OtaFirmwareJobInfoIndexResp 表示OTA作业信息索引的响应。
type OtaFirmwareJobInfoIndexResp  {
    List []*OtaFirmwareJobInfo `json:"list"` // OTA作业信息列表
    PageResp
}


type OtaFirmwareJobInfo  {
    ID          int64 `json:"id,optional"`
    FirmwareID  int64 `json:"firmwareID,optional"`// 升级包ID，升级包的唯一标识符。
    Type        int64 `json:"type,optional,range=[0:2]"`// 升级包所属产品的JobType。 验证升级包:1  批量升级:2
    Status      int64 `json:"status,optional,range=[0:4]"`// 批次状态,计划中:1  执行中:2  已完成:3  已取消:4
    UpgradeType int64 `json:"upgradeType,optional,range=[0:2]"`// 升级策略，1-静态，2-动态
/*
    待升级版本号列表。
        发起全量升级（TargetSelection=ALL）和灰度升级（TargetSelection=GRAY）任务时，可以传入该参数。
        使用差分升级包发起全量升级和灰度升级任务时，该参数值需指定为差分升级包的待升级版本号（SrcVersion）。
        发起定向升级（TargetSelection=SPECIFIC）或分组升级（TargetSelection=GROUP）任务时，不能传入该参数。
        可以调用 QueryDeviceDetail ，查看设备 OTA 模块版本号（FirmwareVersion）。
        列表中不能有重复的版本号。
        最多可传入 10 个版本号。
*/
    SrcVersions []string   `json:"srcVersions,optional"`// 待升级版本号列表。最多可传入10个版本号。用逗号分隔多个版本号
    RetryInterval    int64 `json:"retryInterval,optional"` // 设备升级失败后，自动重试的时间间隔，单位为分钟。 动态升级 静态升级
    RetryCount       int64 `json:"retryCount,optional"` // 自动重试次数。1/2/5次 动态升级 静态升级
    TimeoutInMinutes int64 `json:"timeoutInMinutes,optional"` // 设备升级超时时间，单位为分钟。 动态升级 静态升级
    MaximumPerMinute int64 `json:"maximumPerMinute,optional"` // 每分钟最多向多少个设备推送升级包下载URL。 动态升级 静态升级
/*
        是否覆盖之前的升级任务。取值：

        2（默认）：不覆盖。若设备已有升级任务，则只执行已有任务。
        1：覆盖。设备只执行新的升级任务。此时 MultiModuleMode 不能传入 true。
    动态升级 静态升级
*/
    IsOverwriteMode int64 `json:"isOverwriteMode,optional,range=[0:2]"`// 是否覆盖之前的升级任务。取值：2（不覆盖）、1（覆盖）。
/*
            物联网平台是否主动向设备推送升级任务。
        1（默认）：是。批次任务创建完成后，物联网平台主动将升级任务，直接推送给升级范围内的在线设备。
            此时，设备仍可主动向物联网平台发起请求，来获取 OTA 升级任务信息。
        2：否。设备必须通过向物联网平台发起请求，来获取 OTA 升级任务信息。
    动态升级
*/
    IsNeedPush int64 `json:"isNeedPush,optional,range=[0:2]"` // 物联网平台是否主动向设备推送升级任务。

/*
    如需自主控制设备 OTA 升级时，可配置此参数，通过手机 App 来控制，设备是否可进行 OTA 升级。手机 App 需您自行开发。
        2（默认）：否。直接按照 NeedPush 设置，获取 OTA 升级任务信息。
        1：是。设备无法获取 OTA 升级任务，需 App 侧确认 OTA 升级后，才能按照 NeedPush 设置，获取 OTA 升级任务信息。
*/
    IsNeedConfirm int64 `json:"isNeedConfirm,optional,range=[0:2]"`
    Target string `json:"target,optional"`// 分组升级和区域升级填写对应的id
    TargetSelection int64 `json:"targetSelection,optional,range=[0:4]"` //升级范围。 1：全量升级。 2：定向升级。 3：灰度升级。 4：分组升级(不做) 5: 区域升级(不做)
    TenantCodes []string `json:"tenantCodes,optional"`//指定租户
    CreatedTime int64 `json:"createdTime,optional"`
    OtaFirmwareJobDynamic
    OtaFirmwareJobStatic
}



type OtaFirmwareJobDynamic  {
/*
        动态升级模式。取值范围：
        1（默认）：除了升级当前满足升级条件的设备，还将持续检查设备是否满足升级条件，对满足升级条件的设备进行升级。
        2：仅对后续上报新版本号的设备生效。
    动态升级
*/
    DynamicMode int64 `json:"dynamicMode,optional,range=[0:2]"` //
}

type OtaFirmwareJobStatic  {
/*
        定向升级的设备名称列表。
        使用差分升级包进行定向升级时，要升级的设备的当前 OTA 模块版本号需与差分升级包的待升级版本号（SrcVersion）相同。
        可以调用 QueryDeviceDetail ，查看设备 OTA 模块版本号（FirmwareVersion）。
        列表中的设备所属的产品必须与升级包所属产品一致。
        列表中不能有重复的设备名称。
        最多可传入 200 个设备名称。
    静态升级
*/
    TargetDeviceNames []string `json:"targetDeviceNames,optional"` // 定向升级的设备名称列表。最多可传入200个设备名称。以逗号分隔
/*
        指定结束升级的时间。
        结束时间距发起时间（ScheduleTime）最少 1 小时，最多为 30 天。取值为 13 位毫秒值时间戳。
        不传入该参数，则表示不会强制结束升级。
    静态升级
*/
    ScheduleFinishTime int64 `json:"scheduleFinishTime,optional"` // 指定结束升级的时间，单位为毫秒。
/*
        指定发起 OTA 升级的时间。
        定时时间范围需为当前时间的 5 分钟后至 7 天内。取值为秒时间戳。
        不传入该参数，则表示立即升级。
    静态升级
*/
    ScheduleTime    int64 `json:"scheduleTime,optional"`
    GrayPercent int64 `json:"grayPercent,optional"`//灰度的范围,小数点后两位, 1.23%为 123
}




