// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.1
// Source: dg.proto

package server

import (
	"context"

	"gitee.com/unitedrhino/things/service/dgsvr/internal/logic/deviceauth"
	"gitee.com/unitedrhino/things/service/dgsvr/internal/svc"
	"gitee.com/unitedrhino/things/service/dgsvr/pb/dg"
)

type DeviceAuthServer struct {
	svcCtx *svc.ServiceContext
	dg.UnimplementedDeviceAuthServer
}

func NewDeviceAuthServer(svcCtx *svc.ServiceContext) *DeviceAuthServer {
	return &DeviceAuthServer{
		svcCtx: svcCtx,
	}
}

// 设备登录认证
func (s *DeviceAuthServer) LoginAuth(ctx context.Context, in *dg.LoginAuthReq) (*dg.Response, error) {
	l := deviceauthlogic.NewLoginAuthLogic(ctx, s.svcCtx)
	return l.LoginAuth(in)
}

// 设备操作认证
func (s *DeviceAuthServer) AccessAuth(ctx context.Context, in *dg.AccessAuthReq) (*dg.Response, error) {
	l := deviceauthlogic.NewAccessAuthLogic(ctx, s.svcCtx)
	return l.AccessAuth(in)
}

// 设备动态注册
func (s *DeviceAuthServer) DeviceRegister(ctx context.Context, in *dg.DeviceRegisterReq) (*dg.DeviceRegisterResp, error) {
	l := deviceauthlogic.NewDeviceRegisterLogic(ctx, s.svcCtx)
	return l.DeviceRegister(in)
}
