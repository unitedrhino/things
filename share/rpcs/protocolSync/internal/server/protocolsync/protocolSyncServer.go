// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.1
// Source: protocolSync.proto

package server

import (
	"context"

	"gitee.com/unitedrhino/things/share/rpcs/protocolSync/internal/logic/protocolsync"
	"gitee.com/unitedrhino/things/share/rpcs/protocolSync/internal/svc"
	"gitee.com/unitedrhino/things/share/rpcs/protocolSync/pb/protocolSync"
)

type ProtocolSyncServer struct {
	svcCtx *svc.ServiceContext
	protocolSync.UnimplementedProtocolSyncServer
}

func NewProtocolSyncServer(svcCtx *svc.ServiceContext) *ProtocolSyncServer {
	return &ProtocolSyncServer{
		svcCtx: svcCtx,
	}
}

func (s *ProtocolSyncServer) SyncProduct(ctx context.Context, in *protocolSync.Empty) (*protocolSync.Empty, error) {
	l := protocolsynclogic.NewSyncProductLogic(ctx, s.svcCtx)
	return l.SyncProduct(in)
}

func (s *ProtocolSyncServer) SyncDevice(ctx context.Context, in *protocolSync.SyncDeviceReq) (*protocolSync.SyncDeviceResp, error) {
	l := protocolsynclogic.NewSyncDeviceLogic(ctx, s.svcCtx)
	return l.SyncDevice(in)
}
